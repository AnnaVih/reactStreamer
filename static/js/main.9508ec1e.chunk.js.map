{"version":3,"sources":["apis/stream.js","history.js","actions/index.js","actions/types.js","components/streams/StreamForm.js","components/streams/StreamCreate.js","components/streams/StreamEdit.js","components/Modal.js","components/streams/StreamDelete.js","components/streams/StreamList.js","components/streams/StreamShow.js","components/GoogleAuth.js","components/Header.js","components/Footer.js","components/App.js","reducers/authReducer.js","reducers/index.js","reducers/streamReducer.js","index.js"],"names":["axios","create","baseURL","createHistory","fetchStream","id","_ref3","Object","asyncToGenerator","regenerator_default","a","mark","_callee3","dispatch","response","wrap","_context3","prev","next","streams","get","concat","sent","type","payload","data","stop","this","_x4","apply","arguments","StreamForm","renderError","_ref","error","touched","console","log","react_default","createElement","className","renderInput","_ref2","input","label","meta","_this","onSubmit","formValues","props","handleSubmit","redux_form_es","name","component","Component","reduxForm","form","validate","errors","title","description","StreamCreate","createStream","streams_StreamForm","connect","_callee","getState","userId","_context","auth","post","objectSpread","history","push","_x","_x2","StreamEdit","editStream","match","params","stream","initialValues","_","pick","state","ownProps","_ref4","_callee4","_context4","patch","_x5","Modal","ReactDOM","createPortal","onClick","onDismiss","e","stopPropagation","content","actions","document","querySelector","StreamDelete","renderActions","Fragment","deleteStream","Link","to","renderContent","components_Modal","_ref5","_callee5","_context5","delete","_x6","StreamList","renderAdmin","currentUserId","renderCreate","isSignedIn","style","textAlign","renderList","map","key","fetchStreams","values","_callee2","_context2","_x3","StreamShow","_this$props$stream","GoogleAuth","onOuthChange","signIn","currentUser","getId","signOut","onSignInClick","onSignOutClick","renderAuthButton","_this2","window","gapi","load","client","init","clientId","scope","then","auth2","getAuthInstance","listen","Header","components_GoogleAuth","Footer","url","open","App","Router","components_Header","Switch","Route","path","exact","components_Footer","initialState","combineReducers","length","undefined","action","formReducer","mapKeys","defineProperty","omit","composeEnchancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","reduxThunk","render","es","components_App"],"mappings":"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","file":"static/js/main.9508ec1e.chunk.js","sourcesContent":["import axios from 'axios'\n\nexport default axios.create ({\n    baseURL: 'https://simple-streams.herokuapp.com/'\n})","import createHistory from 'history/createBrowserHistory'\n\nexport default createHistory()","import streams from '../apis/stream'\nimport history from '../history'\nimport { \n    SIGN_IN,\n    SIGN_OUT,\n    CREATE_STREAM,\n    FETCH_STREAM,\n    FETCH_STREAMS,\n    EDIT_STREAM,\n    DELETE_STREAM\n} from './types'\n\nexport const signIn = userId => {\n    return {\n        type: SIGN_IN,\n        payload: userId\n    }\n}\n\nexport const signOut = () => {\n    return {\n        type: SIGN_OUT \n    }\n}\n\nexport const createStream = formValues => async (dispatch, getState) => {\n    const { userId } = getState().auth\n    const response = await streams.post('/streams', {...formValues, userId})\n        dispatch({\n            type: CREATE_STREAM,\n            payload: response.data\n        })\n    history.push('/')\n}\n\nexport const fetchStreams = () => async dispatch => {\n    const response = await streams.get('/streams')\n        dispatch({\n            type: FETCH_STREAMS,\n            payload: response.data\n        })\n}\n\nexport const fetchStream = id => async dispatch => {\n    const response = await streams.get(`/streams/${id}`)\n        dispatch({\n            type: FETCH_STREAM,\n            payload: response.data\n        })\n}\n\nexport const editStream = (id, formValues) => async dispatch => {\n    const response = await streams.patch(`/streams/${id}`, formValues)\n        dispatch({\n            type: EDIT_STREAM,\n            payload: response.data\n        })\n        history.push('/')\n}\n\nexport const deleteStream = id => async dispatch => {\n    await streams.delete(`/streams/${id}`)\n        dispatch({\n            type: DELETE_STREAM,\n            payload: id\n        })\n        history.push('/')\n}\n\n\n","export const SIGN_IN = 'SIGN_IN'\nexport const SIGN_OUT = 'SIGN_OUT'\nexport const CREATE_STREAM = 'CREATE_STREAM'\nexport const FETCH_STREAMS = 'FETCH_STREAMS'\nexport const FETCH_STREAM = 'FETCH_STREAM'\nexport const DELETE_STREAM = 'DELETE_STREAM'\nexport const EDIT_STREAM = 'EDIT_STREAM'\n\n\n\n\n\n","import React, { Component } from 'react'\nimport { Field, reduxForm } from 'redux-form'\n\nclass StreamForm extends Component {\n\n    renderError = ({error, touched}) => {\n        \n        if(touched && error){\n            console.log(touched,error)\n            return (\n            <div className=\"ui error message\">\n                <div className=\"header\">{error}</div>\n            </div>\n            )\n        }\n    }\n\n    renderInput = ({input, label, meta}) => {\n        return (\n            <div className=\"field\">\n                <label>{label}</label>\n                <input {...input}/>\n                {this.renderError(meta)}\n            </div>\n        )\n    }\n\n    onSubmit = formValues => {\n        this.props.onSubmit(formValues)\n    }\n\n    render() {\n        return (\n            //handleSubmit method comes from redux-form itself\n            <form onSubmit={this.props.handleSubmit(this.onSubmit)} className=\"ui form error\">\n                <Field name=\"title\" component={this.renderInput} label=\"Enter title\" />\n                <Field name=\"description\" component={this.renderInput} label=\"Enter Description\"/>\n                <button className=\"ui button primary\">Submit</button>\n            </form>\n        )\n    }\n}\n\nconst validate = (formValues) => {\n    const errors = {}\n    if(!formValues.title) {\n        errors.title = 'You must enter a title'\n    }\n    if(!formValues.description) {\n        errors.description = 'You must enter a description'\n    }\n\n    return errors\n}\n\nexport default reduxForm({form: 'streamForm', validate})(StreamForm)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { createStream } from '../../actions'\nimport StreamForm from './StreamForm'\n\nclass StreamCreate extends Component {\n\n    onSubmit = formValues => {\n        this.props.createStream(formValues)\n    }\n\n    render() {\n        return (\n        <div>\n            <h3>Create a stream</h3>\n            <StreamForm onSubmit={this.onSubmit}/>\n        </div>\n        )\n    }\n}\n\nexport default connect(null, {createStream})(StreamCreate)","import _ from 'lodash'\nimport React, {Component} from 'react'\nimport { connect } from 'react-redux'\nimport {fetchStream, editStream} from '../../actions'\nimport StreamForm from './StreamForm'\n\nclass StreamEdit extends Component {\n    componentDidMount() {\n        this.props.fetchStream(this.props.match.params.id)\n    }\n\n    onSubmit = formValues => {\n        this.props.editStream(this.props.match.params.id, formValues)\n    }\n\n    render() {\n        if(!this.props.stream) {\n            return <div>Loading ...</div>\n        }\n\n        return (\n            <div>\n                <h3>Edit a stream</h3>\n                {/* initialValues - comes from redux-form.\n                _.pick - create a new object from the given properties of the original object */}\n                <StreamForm onSubmit={this.onSubmit} initialValues={_.pick(this.props.stream, 'title', 'description')}/>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    return {stream: state.streams[ownProps.match.params.id]}\n}\n\nexport default connect(mapStateToProps, {fetchStream, editStream})(StreamEdit)","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nconst Modal = props => {\n    return ReactDOM.createPortal(\n        <div\n            onClick={props.onDismiss}\n            className=\"ui active dimmer modals\"\n        >\n            <div\n                onClick={(e) => e.stopPropagation()}\n                className=\"ui active fullscreen modal\"\n            >\n                <div className=\"header\">{props.title}</div>\n                <div className=\"content\">{props.content}</div>\n                <div className=\"actions\">\n                    {props.actions}\n                </div>\n          </div>\n        </div>,\n        document.querySelector('#modal')\n    )\n}\n\nexport default Modal","import React, {Component} from 'react'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport Modal from '../Modal'\nimport history from '../../history'\nimport { fetchStream, deleteStream } from '../../actions'\n\nclass StreamDelete extends Component {\n    componentDidMount() {\n        this.props.fetchStream(this.props.match.params.id)\n    }\n\n    renderActions = () => {\n        const { id } = this.props.match.params\n        return (\n            <React.Fragment>\n                <button \n                    className=\"ui button negative\"\n                    onClick={() => this.props.deleteStream(id)}\n                >\n                    Delete\n                </button>\n                <Link to=\"/\" className=\"ui button\">Cancel</Link>\n            </React.Fragment>\n        )\n    }\n\n    renderContent = () => {\n        if(!this.props.stream){\n            return 'Are you sure you want to delete a stream?'\n        }\n\n        return `Are you sure you want to delete the stream with title: ${this.props.stream.title}`\n    }\n\n    render() {\n        return (\n            <Modal \n                title=\"Delete a stream\"\n                content={this.renderContent()}\n                actions={this.renderActions()}\n                onDismiss={() => history.push('/')}\n            />\n        )\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        stream: state.streams[ownProps.match.params.id]\n    }\n}\n\nexport default connect(mapStateToProps, {fetchStream, deleteStream})(StreamDelete)","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { fetchStreams } from '../../actions'\n\nclass StreamList extends Component {\n    componentDidMount() {\n        this.props.fetchStreams()\n    }\n\n    renderAdmin = stream => {\n        if(stream.userId === this.props.currentUserId) {\n            return (\n                <div className=\"right floated content\">\n                    <Link to={`/streams/edit/${stream.id}`} className=\"ui button primary\">Edit</Link>\n                    <Link to={`/streams/delete/${stream.id}`} className=\"ui button negative\">Delete</Link>\n                </div>\n            )\n        }\n    }\n\n    renderCreate = () => {\n        if(this.props.isSignedIn) {\n            return (\n                <div style={{textAlign: 'right'}}>\n                    <Link to=\"/streams/new\" className=\"ui button primary\">Create stream</Link>\n                </div>\n            )\n        }\n    }\n\n    renderList = () => {\n        return this.props.streams.map(stream => {\n            return (\n                <div className=\"item\" key={stream.id}>\n                    {this.renderAdmin(stream)}\n                    <i className=\"large midlle aligned icon camera\"/>\n                    <div className=\"content\">\n                        <Link to={`/streams/${stream.id}`} className=\"header\">\n                            {stream.title}\n                        </Link>\n                        <div className=\"description\">\n                            {stream.description}\n                        </div>\n                    </div>\n                </div>\n            )\n        })\n    }\n    \n    render() {\n        return (\n            <div>\n                <h2>Streams</h2>\n                <div className=\"ui celled list\">\n                    {this.renderList()}\n                </div>\n                {this.renderCreate()}\n            </div>\n        )\n    }\n    \n}\n\nconst mapStateToProps = state => {\n    return {\n        streams: Object.values(state.streams),\n        currentUserId: state.auth.userId,\n        isSignedIn: state.auth.isSignedIn\n    }\n}\n\nexport default connect(mapStateToProps, {fetchStreams})(StreamList)","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { fetchStream } from '../../actions'\n\nclass StreamShow extends Component {\n    componentDidMount() {\n        this.props.fetchStream(this.props.match.params.id)\n    }\n    render() {\n        if(!this.props.stream){\n            return <div>Loading...</div>\n        }\n\n        const { title, description } = this.props.stream\n        return (\n            <div>\n                <h1>{title}</h1>\n                <p>{description}</p>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        stream: state.streams[ownProps.match.params.id]\n    }\n}\n\nexport default connect(mapStateToProps, { fetchStream })(StreamShow)","import React, {Component} from 'react'\nimport { connect } from 'react-redux'\nimport {signIn, signOut } from '../actions'\n\nclass GoogleAuth extends Component {\n\n    componentDidMount() {\n        window.gapi.load('client:auth2', () => {\n            window.gapi.client.init({\n                clientId: '521920650321-e2e1r4e5cctn2ns3fo1qnm8a8qp8c30m.apps.googleusercontent.com',\n                scope: 'email'\n            }).then(() => {\n                this.auth = window.gapi.auth2.getAuthInstance()\n                this.onOuthChange(this.auth.isSignedIn.get())\n                this.auth.isSignedIn.listen(this.onOuthChange)\n            })\n        })\n    }\n\n    onOuthChange = isSignedIn => {\n        if(isSignedIn){\n            this.props.signIn(this.auth.currentUser.get().getId())\n        } else {\n            this.props.signOut()\n        }\n    }\n\n    onSignInClick = () => {\n        this.auth.signIn()\n    }\n\n    onSignOutClick = () => {\n        this.auth.signOut()\n    }\n\n    renderAuthButton = () => {\n        if(this.props.isSignedIn === null) {\n            return null\n        } else if(this.props.isSignedIn){\n            return (\n                <button onClick={this.onSignOutClick} className=\"ui red google button\">\n                <i className=\"google icon\"/>\n                Sign out\n                </button>\n            )\n        } else {\n            return (\n                <button onClick={this.onSignInClick} className=\"ui red google button\">\n                <i className=\"google icon\"/>\n                Sign in with Google\n                </button>\n            )\n        }\n    }\n\n    render() {\n        return <div>{this.renderAuthButton()}</div>\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        isSignedIn: state.auth.isSignedIn\n    }\n}\n\nexport default connect(mapStateToProps, {signIn, signOut})(GoogleAuth)","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport GoogleAuth from './GoogleAuth'\n\nconst Header = () => {\n    return (\n        <div className=\"ui secondary pointing menu\">\n            <Link to=\"/\" className=\"item\">\n                Streamer\n            </Link>\n            <div className=\"right menu\">\n                <Link to=\"/\" className=\"item\">All streams</Link>\n                <GoogleAuth/>\n            </div>\n        </div>\n    )\n}\n\nexport default Header","import React from 'react'\n\nconst Footer = () => {\n    \n    const buttonClickHandler = url => {\n        window.open(url, '_blank')\n    }\n\n    return (\n        <div className=\"ui secondary block header pointing center aligned\">\n            <button \n                onClick={() => buttonClickHandler(\"https://github.com/AnnaVih/reactStreamer\")}\n                className=\"fluid ui button\"\n            >Check source code on GitHub</button>\n            <p>Developed in React by Anna Vihrogonova. It is a result of hard work, passion and learning from failure</p>\n        </div>\n    )\n}\n\nexport default Footer","import React from 'react'\nimport { Router, Route, Switch } from 'react-router-dom'\n\nimport StreamCreate from './streams/StreamCreate'\nimport StreamEdit from './streams/StreamEdit'\nimport StreamDelete from './streams/StreamDelete'\nimport StreamList from './streams/StreamList'\nimport StreamShow from './streams/StreamShow'\n\nimport Header from './Header'\nimport Footer from './Footer'\nimport history from '../history'\n\nconst App = () => {\n    return (\n        <div className=\"ui container\">\n            <Router history={history}>\n            <div>\n                <Header/>\n                <Switch>    \n                    <Route path=\"/\" exact component={StreamList}/>\n                    <Route path=\"/streams/new\" component={StreamCreate}/>\n                    <Route path=\"/streams/edit/:id\" component={StreamEdit}/>\n                    <Route path=\"/streams/delete/:id\" component={StreamDelete}/>\n                    <Route path=\"/streams/:id\" component={StreamShow}/>\n                </Switch>\n                <Footer/>\n            </div>\n            </Router>\n        </div>\n    )\n}\n\nexport default App","import { SIGN_IN, SIGN_OUT } from '../actions/types'\n\nconst initialState = {\n    isSignedIn: null,\n    userId: null\n}\n\nexport default (state = initialState, action) => {\n    switch(action.type){\n        case SIGN_IN:\n            return {...state, isSignedIn: true, userId: action.payload}\n        case SIGN_OUT:\n        return {...state, isSignedIn: false, userId: null}\n        default: \n            return state\n    }\n}","import {combineReducers} from 'redux'\nimport { reducer as formReducer } from 'redux-form'\nimport authReducer from './authReducer'\nimport streamReducer from './streamReducer'\n\nexport default combineReducers({\n    auth: authReducer,\n    form: formReducer,\n    streams: streamReducer\n})","\nimport _ from 'lodash'\nimport {\n    FETCH_STREAM,\n    FETCH_STREAMS,\n    CREATE_STREAM,\n    EDIT_STREAM,\n    DELETE_STREAM\n} from '../actions/types'\n\nexport default (state = {}, action) => {\n    switch(action.type){\n        case FETCH_STREAMS:\n            return {...state, ..._.mapKeys(action.payload, 'id')}\n        case FETCH_STREAM: \n            return {...state, [action.payload.id]: action.payload}\n        case CREATE_STREAM:\n            return {...state, [action.payload.id]: action.payload}\n        case EDIT_STREAM: \n        return {...state, [action.payload.id]: action.payload}  \n        case DELETE_STREAM:\n            return _.omit(state, action.payload)        \n        default:\n            return state\n    }\n}","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport reduxThunk from 'redux-thunk'\n\nimport App from './components/App'\nimport reducers from './reducers'\n\nconst composeEnchancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\nconst store = createStore(\n    reducers,\n    composeEnchancers(applyMiddleware(reduxThunk))\n)\n\nReactDOM.render(\n    <Provider store={store}><App/></Provider>,\n    document.querySelector('#root')\n)"],"sourceRoot":""}